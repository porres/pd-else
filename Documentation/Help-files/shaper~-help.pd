#N canvas 535 39 562 604 10;
#X obj 3 577 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 5 314 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 427 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 533 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 323 cnv 17 3 99 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 138 322 signal;
#X obj 83 436 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 138 436 signal;
#X text 102 337 set <symbol>;
#X text 187 336 - sets the array/table to be used for lookup;
#X text 187 321 - signal to be used as index;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 25 41 cnv 4 4 4 empty empty Waveshaper 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 4 cnv 15 301 42 empty empty shaper~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 96 205 cnv 15 118 78 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-clip 512 float 1;
#A 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -0.96875 -0.9375 -0.90625 -0.875 -0.84375 -0.8125 -0.78125 -0.75 -0.71875 -0.6875 -0.65625 -0.625 -0.59375 -0.5625 -0.53125 -0.5 -0.46875 -0.4375 -0.40625 -0.375 -0.34375 -0.3125 -0.28125 -0.25 -0.21875 -0.1875 -0.15625 -0.125 -0.09375 -0.0625 -0.03125 0 0.03125 0.0625 0.09375 0.125 0.15625 0.1875 0.21875 0.25 0.28125 0.3125 0.34375 0.375 0.40625 0.4375 0.46875 0.5 0.53125 0.5625 0.59375 0.625 0.65625 0.6875 0.71875 0.75 0.78125 0.8125 0.84375 0.875 0.90625 0.9375 0.96875 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
#A color 0;
#A width 1;
#X coords 0 1.05 511 -1.05 120 80 1 0 0;
#X restore 95 204 graph;
#X text 90 286 0;
#X text 201 286 511;
#X text 75 272 -1;
#X text 80 199 1;
#X obj 282 253 else/out~;
#N canvas 706 128 615 532 waveshaping 0;
#X obj 44 215 cnv 15 248 148 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-t_func 4099 float 0;
#A color 0;
#A width 1;
#X coords 0 1 4098 -1 250 150 1 0 0;
#X restore 43 214 graph;
#X obj 344 104 *~;
#X obj 423 50 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 426 29 hsl 128 15 0.1 2 0 1 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 12700 1;
#X text 457 29 Amplitude;
#X obj 345 370 else/graph~ 512 14;
#X obj 367 300 else/out~;
#X obj 423 71 else/float2sig~ 50;
#X obj 344 54 osc~ 110;
#X text 35 26 Here's an example of waveshaping with a given transfer function \, but on a sine wave as a synthesis technique., f 43;
#X text 482 109 using the "set" message to set an array, f 15;
#X obj 388 114 else/initmess set \$0-t_func, f 14;
#X obj 126 165 else/initmess \; \$0-t_func cosinesum 4096 1 -1 1 0.3 0.2 0.9 \, normalize, f 27;
#X obj 344 273 else/shaper~ -filter 0;
#X msg 407 182 filter \$1;
#X obj 407 160 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 429 160 removes DC offset;
#X text 35 70 This particular transfer function generates a DC Offset \, but [shaper~] filters out the DC component (0Hz) with an internal high pass filter set at 5 hz. This filter is on by default \, but you can turn it off with the -filter flag or message., f 43;
#X msg 419 236 clip \$1;
#X obj 419 211 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 36 391 By default \, if the signal exceeds the -1 to 1 range \, the input is wrapped \, which works fine for some transfer functions such as the above one. You can also use the '-clip' flag or message to clip the input within the -1 to 1 range. This also affects interpolation and is useful for some transfer functions that can't be wrapped as the one above., f 46;
#X connect 2 0 14 0;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 8 0 2 1;
#X connect 9 0 2 0;
#X connect 12 0 14 0;
#X connect 14 0 6 0;
#X connect 14 0 7 0;
#X connect 15 0 14 0;
#X connect 16 0 15 0;
#X connect 19 0 14 0;
#X connect 20 0 19 0;
#X restore 442 246 pd waveshaping;
#N canvas 806 221 446 245 more 0;
#X obj 69 91 osc~ 0.075;
#X text 29 21 [shaper~] also allows other functionalities besides waveshaping. For example \, an LFO sine wave can scan through an audio sample forward and reverse \, accelerating and decelerating \, resulting in a turntable scratch effect. Check below., f 65;
#X obj 69 160 else/out~;
#X obj 69 125 else/shaper~ \$0-violin;
#X obj 206 170 else/sample~ \$0-violin violin.flac;
#X connect 0 0 3 0;
#X connect 3 0 2 0;
#X restore 484 288 pd more;
#X text 70 87 [shaper~] performs waveshaping with transfer functions \, in which signal input values (from -1 to 1) are mapped to the the transfer function's indexes. Values outside the -1 to 1 range are wrapped inside it., f 65;
#X text 70 134 You can set an array for [shaper~] \, as in this example \, or use its internal transfer function for Chebyshev polynomials., f 65;
#X text 150 351 list;
#X text 114 365 dc <float>;
#X text 187 364 - sets DC offset for internal transfer function;
#X text 102 379 norm <float>;
#X text 187 378 - sets normalization for internal function on <1> or off <0>;
#X text 187 538 -;
#X text 108 538 1) anything;
#X text 199 538 a symbol sets array/table name to be used for lookup \, but a list of floats sets harmonic weights for internal transfer function (default 1)., f 55;
#X obj 5 459 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 143 482 -dc: sets DC offset for internal transfer function (default 0), f 62;
#X text 83 498 -norm <float>:;
#X text 173 497 sets normalization on <1> (default) or off <0>, f 57;
#N canvas 296 80 933 586 Chebyshev 0;
#X text 22 14 If you don't give [shaper~] an array with a transfer function \, it uses an internal one by default. This internal transfer function represents a summation of Chebyshev polynomials., f 70;
#X text 22 51 You can give a list of coefficients for each nth order polynomial. For a sine wave input \, these represent the amplitudes for the harmonics generated by the transfer function \, starting with the fundamental., f 70;
#X text 22 89 By default \, [shaper~] loads a transfer function with the argument "1" \, which is the first order polynomial \, which is just a linear function. Hence \, it represents the fundamental., f 70;
#X obj 58 228 osc~ 200;
#X obj 128 414 else/graph~ 441 8;
#X msg 143 237 1 1;
#X msg 127 212 1;
#X obj 128 319 else/shaper~;
#X text 154 212 fundamental;
#X text 171 236 fundamental and 1st harmonic;
#X msg 155 269 0.5 1;
#X msg 212 284 norm \$1;
#X obj 212 264 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 22 129 The list of coefficients can be given as an argumnent or as a list input. The object \, by default \, normalizes the transfer function to output values between -1 and 1 \, but you can change that with the "norm" message or flag., f 70;
#X obj 672 248 osc~ 200;
#X obj 600 389 else/graph~ 441 8;
#X msg 599 174 norm \$1;
#X obj 599 154 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 634 196 0.5;
#X msg 523 162 dc \$1;
#X obj 526 123 hsl 100 15 0 0.5 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 523 143 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X msg 663 219 0.5 0.5;
#X obj 142 352 else/out~;
#X obj 615 321 else/out~;
#X text 482 81 you can set the DC offset with the "dc" message or flag., f 70;
#X text 482 30 For non normalized outputs \, you can also set a DC value \, or 0th order polynomoal. This can also be set for a normalized function \, but doesn't affect it. Clearly \, the internal filter needs to be off as well., f 70;
#X obj 600 289 else/shaper~ -norm 0 -dc 0.5 -filter 0 0.5;
#X connect 3 0 7 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 7 0 23 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 11 0;
#X connect 14 0 27 0;
#X connect 16 0 27 0;
#X connect 17 0 16 0;
#X connect 18 0 27 0;
#X connect 19 0 27 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 22 0 27 0;
#X connect 27 0 15 0;
#X connect 27 0 24 0;
#X restore 454 267 pd Chebyshev;
#X text 187 350 - harmonic weights for internal transfer function;
#X text 187 436 - output of transfer function (waveshaping);
#X obj 282 217 else/shaper~ \$0-clip;
#X text 90 393 filter <float>;
#X text 70 514 -filter <float>:;
#X text 173 513 sets DC filter on <1> (default) or off <0>, f 57;
#X obj 282 187 else/player~ violin.flac 1 1;
#X text 131 467 -clip: set to clip mode (default wrap), f 64;
#X text 102 408 clip <float>;
#X text 187 407 - non zero sets to clip mode;
#X text 187 392 - non zero sets sets highpass filter;
#X connect 48 0 28 0;
#X connect 52 0 48 0;
