#N canvas 441 65 562 510 10;
#X obj 3 290 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 389 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 446 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 133 398 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 134 298 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 480 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 21 40 cnv 4 4 4 empty empty Stereo\ panning 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #4a4f51 #cde5c3 #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #4a4f51 #cde5c3 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 71 pd;
#X obj 134 366 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 163 367 float/signal;
#X floatatom 296 189 9 0 0 0 - - - 0;
#X obj 206 150 osc~ 440;
#X obj 3 4 cnv 15 301 42 empty empty pan.stereo~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 133 420 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 154 220 else/out~;
#X text 181 398 signal(s);
#X obj 296 210 else/f2s~ 10;
#N canvas 436 151 772 420 multichannel 0;
#X obj 246 199 knob 50 -1 1 0 1 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 115 293 else/out~;
#X obj 113 174 else/sine~ -mc 400 600, f 12;
#X obj 577 85 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 438 269 else/out~;
#X obj 550 243 else/meter2~;
#X obj 623 243 else/meter2~;
#X obj 437 102 else/sine~ -mc 400 600, f 12;
#X obj 635 85 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 578 142 else/pack2;
#X obj 160 211 else/sine~ -mc 402 602, f 12;
#X text 31 37 If the object has a multichannel left/mid input \, it outputs the same number of channels (both need to have the same number of channels). If the right inlet has a signal with a single channel for width \, the single value is applied to all channels. If the right inlet is also a multichhanel signal \, then each channel gets its width value. Note \, however \, that the number of multichannels in the right inlet needs to match the same number of channels from the left/mid input., f 61;
#X text 436 35 The 'width' message can be used to set panning for one or more channels., f 39;
#X obj 483 141 else/sine~ -mc 402 602, f 12;
#X obj 114 253 else/pan.stereo~;
#X obj 246 261 else/f2s~;
#X obj 437 196 else/pan.stereo~;
#X obj 578 163 else/insert pan;
#X connect 0 0 15 0;
#X connect 2 0 14 0;
#X connect 3 0 9 0;
#X connect 7 0 16 0;
#X connect 8 0 9 1;
#X connect 9 0 17 0;
#X connect 10 0 14 1;
#X connect 13 0 16 1;
#X connect 14 0 1 0;
#X connect 14 1 1 1;
#X connect 15 0 14 2;
#X connect 16 0 5 0;
#X connect 16 0 4 0;
#X connect 16 1 6 0;
#X connect 16 1 4 1;
#X connect 17 0 16 0;
#X restore 426 248 pd multichannel;
#X text 181 298 signal(s);
#X text 251 398 - left channel(s);
#X text 251 420 - right channel(s);
#X text 181 420 signal(s);
#X obj 154 149 noise~;
#X obj 296 133 else/knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0;
#X obj 134 342 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 163 343 float/signal;
#X text 251 298 - left signal input(s);
#X text 251 343 - right signal input(s);
#X obj 154 191 else/pan.stereo~, f 18;
#X text 75 91 [pan.stereo~] sets the stereo input pan which merges both channels to the left or right. It uses sin/cos equal power panning.;
#X obj 110 238 env~;
#X floatatom 110 259 5 0 0 0 - - - 0;
#X obj 259 238 env~;
#X floatatom 259 259 5 0 0 0 - - - 0;
#X text 154 457 1) float - initial pan value (default 0);
#X text 251 367 - pan value from -1 to 1;
#X text 251 315 - pan value(s) from -1 to 1;
#X text 175 315 pan <list>;
#X connect 18 0 25 0;
#X connect 19 0 37 1;
#X connect 25 0 37 2;
#X connect 31 0 37 0;
#X connect 32 0 18 0;
#X connect 37 0 23 0;
#X connect 37 0 39 0;
#X connect 37 1 23 1;
#X connect 37 1 41 0;
#X connect 39 0 40 0;
#X connect 41 0 42 0;
